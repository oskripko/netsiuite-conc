# Concurrency in Netsuite-reports service

Olga Skripko
24 October 2021

##  Concurrency Definition
Concurrency means multiple computations are happening at the same time.

Concurrent computations can run on the same core. Parallel concurrent computations must run on different cores.

##  Synchronization types
- Wait group
- Atomic
- Channel
- Mutex, Once, Cond, etcâ€¦

##  Netsuite-report
- Iterating through transactions ordered by time (add, charge, cancel, clear)
- Processing transactions into lines
- Writing lines into csv
- Monitoring through progress bar

##  The goroutine scheme
.image ./../images/diagram.png _ 800

##  Iterator
.code ./../iterator.go /START OMIT/,/END OMIT/

##  Worker pool
.code ./../wp.go /START OMIT/,/END OMIT/

## Channel reading
.code ./../chanread.go /^func read/,/^}/

## Channel sync.WaitGroup sync
.code ./../chanread.go /^func closeChan/,/^}/ HLwg

##
.code ./../chanread.go /^func AppendConsumeLineToCSVWG/,/^}/ HLwg

## Channel Netsuite sync
.code ./../chanread.go /^func readAndSync/,/^}/ HLcustomersChan

## Select
.play ./../main/select.go

## Progress bar
.code ./../pb.go /^type ProgressBar/,/^}/ HLfinish
.code ./../pb.go /^func NewProgressBar/,/^}/ HLfinish

##
.code ./../pb.go /START OMIT/,/END OMIT/ HLname

## To read
.link https://web.mit.edu/6.005/www/fa14/classes/17-concurrency/ MIT lesson

.link https://golang.org/ref/mem Golang memory model

.link http://tleyden.github.io/blog/2014/10/30/goroutines-vs-threads/ Goroutines vs Threads
